[project]
name = "btmnist"
version = "0.1.1"
description = "Balanced-ternary MNIST with Triton GEMM"
authors = [
    {name = "DJ Stomp",email = "85457381+DJStompZone@users.noreply.github.com"}
]
license = "MIT"
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "torch (>=2.8.0,<3.0.0)",
    "torchvision (>=0.23.0,<0.24.0)",
    "triton (>=3.4.0,<4.0.0) ; sys_platform != \"win32\"",
    "triton-windows (>=3.4.0.post20,<4.0.0) ; sys_platform == \"win32\"",
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poetry]
name = "btmnist"
version = "0.1.1"
description = "Balanced-ternary MNIST with Triton GEMM"
authors = ["DJ Stomp <85457381+DJStompZone@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "btmnist" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"

[tool.poetry.group.dev.dependencies]
isort = "^5.13.0"
ruff = "^0.12.12"

[tool.ruff]
fix = true
line-length = 110
indent-width = 4
target-version = [
    "py311",
    "py312",
    "py313"
]
extend-exclude = [
    "site-packages",
    ".ipynb_checkpoints",
    ".vscode",
    ".pyenv",
    "poetry_cache",
    ".pytest_cache",
    "__pycache__",
    "build",
    "*.py[cdow]"
]
namespace-packages = ["btmnist"]
preview = false
respect-gitignore = true
show-fixes = true
src = [".", "btmnist"]

[tool.ruff.analyze]
detect-string-imports = true

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "B", "Q"]
ignore = ["E501"]
fixable = ["ALL"]
unfixable = ["B"]
future-annotations = true
preview = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402"]

[tool.ruff.lint.flake8-annotations]
suppress-dummy-args = true
suppress-none-returning = true

[tool.ruff.lint.flake8-builtins]
strict-checking = true

[tool.ruff.lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[tool.ruff.lint.flake8-copyright]
author = "DJ Stomp"
min-file-size = 256

[tool.ruff.lint.flake8-import-conventions.aliases]
"matplotlib.pyplot" = "plt"
numpy = "np"
pandas = "pd"
"torch.nn" = "nn"
"torch.nn.functional" = "F"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
